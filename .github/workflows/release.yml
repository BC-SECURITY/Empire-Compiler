name: Build and Publish Self-Contained Assemblies

on:
  pull_request:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build and release'
        required: true
        default: 'main'
      release_version:
        description: 'Release version (e.g., v1.0.0)'
        required: true

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm, macos-13, macos-15]

    steps:
      - name: Set runtime env var
        run: |
          case ${{ matrix.os }} in
            ubuntu-24.04)
            echo "runtime=linux-x64" >> $GITHUB_ENV
            ;;
            ubuntu-24.04-arm)
            echo "runtime=linux-arm64" >> $GITHUB_ENV
            ;;
            macos-13)
            echo "runtime=osx-x64" >> $GITHUB_ENV
            ;;
            macos-15)
            echo "runtime=osx-arm64" >> $GITHUB_ENV
            ;;
          esac

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
          submodules: recursive

      - name: Set up .NET
        uses: actions/setup-dotnet@v4.0.1
        with:
          dotnet-version: '6.x'

      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build self-contained assembly
        run: |
          dotnet publish -c Release -r ${{ env.runtime }} --self-contained -o ./publish/${{ env.runtime }}
          mv ./publish/${{ env.runtime }}/* ./EmpireCompiler/
        shell: bash
      - name: Download and extract ConfuserEx CLI
        run: |
          mkdir -p ./EmpireCompiler/Data/Temp/
          curl -L -o ./EmpireCompiler/Data/confuserex.zip https://github.com/mkaring/ConfuserEx/releases/download/v1.6.0/ConfuserEx-CLI.zip
          unzip ./EmpireCompiler/Data/confuserex.zip -d ./EmpireCompiler/Data/Temp/ConfuserEx-CLI
          rm ./EmpireCompiler/Data/confuserex.zip
        shell: bash  
      - name: Git Archive All
        run: |
          python scripts/git_archive_all.py \
            --include "EmpireCompiler" \
            publish/EmpireCompiler-${{ env.runtime }}-${{ github.event.inputs.release_version }}.tgz
        shell: bash

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: EmpireCompiler-${{ env.runtime }}
          path: ./publish/EmpireCompiler-${{ env.runtime }}-${{ github.event.inputs.release_version }}.tgz
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./publish
          merge-multiple: true

      - name: Create Git tag
        run: |
          git tag ${{ github.event.inputs.release_version }}
          git push origin ${{ github.event.inputs.release_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: ./publish/*
          tag_name: ${{ github.event.inputs.release_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
